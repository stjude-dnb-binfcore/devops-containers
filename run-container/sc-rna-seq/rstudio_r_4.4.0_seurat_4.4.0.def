#
# Combined build stages
#
# singularity build --fakeroot combined.sif combined.def 2>&1 | tee combined.build_log.txt
# singularity build --fakeroot --sandbox /scratch_local/sandbox combined.sif
# singularity shell --fakeroot --writable /scratch_local/sandbox
#
# bsub -R "rusage[mem=64GB]" singularity build --fakeroot combined.sif combined.def
#
# This full build can take around one hour, but may be somewhat faster if run
# with multiple CPUs as mksquashfs seems to be able to use multiple cores.
#

# https://hub.docker.com/layers/rocker/rstudio/4.4.0/images/sha256-d3ab1f3f4e0d7f5db50a60df40b142a32463ecae279d9a463813f6d92bac36a7

Bootstrap: docker
From: rocker/rstudio:4.4.0


%post
    #
    # Ensure core system software is up to date and ready
    #

    apt-get -y update
    apt-get -y install gdebi-core python3-pip python3-venv

    #
    # Set up virtual env; we need this to keep the existing numpy/scipy/pandas
    # versions cohesive; otherwise, we get mistmatches with e.g. multiqc in the
    # analysis pipelines. After activating the virtual env, we should have:
    #
    # (container-venv) Apptainer> pip3 list
    # Package         Version
    # --------------- -----------
    # numpy           2.2.1
    # pandas          2.2.3
    # scipy           1.14.1
    #
    # Note: need to "source" the virtual env activate script, not just run it.
    #

    python3 -m venv /opt/container-venv
    . /opt/container-venv/bin/activate

    # Avoids BiocManager errors in Rhtslib; "fatal error: lzma.h: No such file or directory" etc
    apt-get -y install liblzma-dev libbz2-dev

    # Avoids BiocManager errors in bluster; "libglpk.so.40: cannot open shared object file: No such file or directory"
    apt-get -y install libglpk-dev

    # Avoids BiocManager errors in infercnv: "libjags.so.4: cannot open shared object file: No such file or directory"
    apt-get -y install r-cran-rjags

    # Avoids errors in "Rscript -e 'devtools::install_github("welch-lab/RcppPlanc")'"
    apt-get -y install cmake libhdf5-dev

    # Needed for pipeline stages
    apt-get install -y openjdk-8-jre-headless fastqc curl
    
    # Install MultiQC specific version (e.g., 1.25)
    # Current multiqc in the container is v1.12 whereas previously the contained had v1.25. 
    # The report style from v1.25 is preferable as it contains more information on overrepresented sequences.
    pip install multiqc==1.25

    # Needed for the cluster-cell-calling stage etc
    pip3 install pandas leidenalg
    
    ENV TEXLIVE_INSTALL_NO_CONTEXT_CACHE=1 \
    NOPERLDOC=1

    # Install TexLive prerequisites
    apt-get update && \
    apt-get install -y wget unzip tar \
    make fontconfig perl openjdk-8-jre libgetopt-long-descriptive-perl \
    libdigest-perl-md5-perl libncurses5 \
    python3-pygments && \
    rm -rf /var/lib/apt/lists/*

    # Install TexLive to the container
    wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz && \
    tar xzf install-tl-unx.tar.gz && \
    #rm install-tl-unx.tar.gz && \
    cd install-tl* && \
    echo "selected_scheme scheme-full" > install.profile && \
    echo "tlpdbopt_install_docfiles 0" >> install.profile && \
    echo "tlpdbopt_install_srcfiles 0" >> install.profile && \
    echo "tlpdbopt_autobackup 0" >> install.profile && \
    echo "tlpdbopt_sys_bin /usr/bin" >> install.profile && \
    ./install-tl -profile install.profile && cd .. && rm -rf install-tl*

    # Symlink TexLive binaries to PATH
    /usr/local/texlive/2024/bin/x86_64-linux/tlmgr path add
    #


    #
    # Use latest R sources to avoid e.g. "matrixStats" version too low for "MatrixGenerics"
    #

    echo "options(repos = c(CRAN = 'https://packagemanager.posit.co/cran/__linux__/jammy/latest'))" >> /usr/local/lib/R/etc/Rprofile.site

    #
    # Install required R package managers
    #

    Rscript -e 'install.packages("usethis")'
    Rscript -e 'install.packages(c("BiocManager", "devtools", "remotes"))'
    
    Rscript -e 'BiocManager::install("celldex")'
    Rscript -e 'if (!requireNamespace("celldex", quietly = TRUE)) stop("celldex not installed!")'
    
    # ###############################################################
    # Problematic installation for the following - February 5, 2025 #
    # START ########## ########## ########## ########## ########## ##
    # Let's fix it!
    #
    # # Docker: Install infercnv
    # https://github.com/broadinstitute/infercnv/blob/master/docker/Dockerfile
    apt-get update && apt-get -y install curl libssl-dev libcurl4-openssl-dev \
                                        libxml2-dev git python3 jags \
                                        r-cran-rjags time && \
                      apt-get clean && rm -rf /var/tmp/* \
                                          /tmp/* /var/lib/apt/lists/*
                                          
    Rscript -e 'BiocManager::install("infercnv")'
    # Checkout and install infercnv
    # update to version bump commit
    git clone https://github.com/broadinstitute/infercnv && cd infercnv && \
      git checkout master && git checkout 1b46b48303bac4a882bcb758e78fcf7f832fdefb && \
      R CMD INSTALL . 

    ENV PATH=${PATH}:/infercnv/scripts
    Rscript -e 'if (!requireNamespace("infercnv", quietly = TRUE)) stop("infercnv not installed!")'
    #

    #
    # # Docker: Install scDblFinder
    # https://github.com/plger/scDblFinder/blob/devel/Dockerfile
    # RUN Rscript -e "BiocManager::install('ensembldb'); BiocManager::install('Rtsne')"
    # RUN Rscript -e "devtools::install('.', dependencies=TRUE, repos = BiocManager::repositories(), build_vignettes = TRUE)"
    #RUN apt-get update && apt-get install -y \
    #    libcurl4-openssl-dev \
    #    libssl-dev \
    #    libxml2-dev \
    #    build-essential \
    #    libgit2-dev \
    #    && rm -rf /var/lib/apt/lists/*
    
    #RUN Rscript -e 'BiocManager::install("scDblFinder")'
    #RUN Rscript -e 'if (!requireNamespace("scDblFinder", quietly = TRUE)) stop("scDblFinder not installed!")'

    # Or, to get the very latest version,
    # RUN Rscript -e 'BiocManager::install("plger/scDblFinder")'
    #

    #
    # # Docker: Install numbat
    # https://github.com/kharchenkolab/numbat/blob/main/docker/Dockerfile
    apt-get update --yes && apt-get install --yes build-essential \
      libcurl4-gnutls-dev libxml2-dev libssl-dev libbz2-dev zlib1g-dev \
      libfontconfig1-dev libharfbuzz-dev libfribidi-dev \
      libncurses5-dev libncursesw5-dev liblzma-dev libgit2-dev \
      libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev \
      libglpk-dev git autoconf gettext libtool automake  \
      samtools sudo

    cd /usr/bin && \
    wget https://github.com/samtools/htslib/releases/download/1.15.1/htslib-1.15.1.tar.bz2 && \
    tar -vxjf htslib-1.15.1.tar.bz2 && cd htslib-1.15.1 && make && sudo make install

    Rscript -e 'install.packages(c("ragg", "pkgdown"))'

    #RUN R -e 'chooseCRANmirror(ind=42); install.packages("ragg")'
    #RUN R -e 'chooseCRANmirror(ind=42); install.packages("pkgdown")'

    R -e 'devtools::install_github("YuLab-SMU/ggtree", dependencies=TRUE)'

    R -e 'devtools::install_github("kharchenkolab/numbat", dependencies=TRUE)'

    git clone https://github.com/kharchenkolab/numbat.git

    mkdir -p /tmp && chmod 777 /tmp

    chmod 777 /numbat/inst/bin/pileup_and_phase.R 

    mkdir data

    # hg 38
    # RUN cd /data && wget -q https://sourceforge.net/projects/cellsnp/files/SNPlist/genome1K.phase3.SNP_AF5e2.chr1toX.hg38.vcf.gz && gzip -d genome1K.phase3.SNP_AF5e2.chr1toX.hg38.vcf.gz 

    ## Note: not run; the user can follow these commands if they want hg19
    # hg19
    ## RUN cd /data && wget https://sourceforge.net/projects/cellsnp/files/SNPlist/genome1K.phase3.SNP_AF5e2.chr1toX.hg19.vcf.gz && gzip -d genome1K.phase3.SNP_AF5e2.chr1toX.hg19.vcf.gz

    # hg38
    # RUN cd /data && wget -q http://pklab.med.harvard.edu/teng/data/1000G_hg38.zip && unzip 1000G_hg38.zip 

    # hg19
    ##RUN cd /data && wget http://pklab.med.harvard.edu/teng/data/1000G_hg19.zip && unzip 1000G_hg19.zip

    apt-get -y update

    git clone https://github.com/single-cell-genetics/cellsnp-lite.git && cd cellsnp-lite && \
  autoreconf -iv && ./configure && make && sudo make install    

    #RUN apt-get -y update

    wget -q https://storage.googleapis.com/broad-alkesgroup-public/Eagle/downloads/Eagle_v2.4.1.tar.gz && cd .. && tar -xvzf Eagle_v2.4.1.tar.gz && cd /Eagle_v2.4.1 && cp eagle /usr/bin

    # Debugging
    Rscript -e 'if (!requireNamespace("numbat", quietly = TRUE)) stop("numbat not installed!")'
    #
    # Problematic installation for R packages fixed - February 5, 2025 #
    # THE END ########## ########## ########## ########## ########## ###
    # ##################################################################
    
    
    #
    # This is a fairly time consuming section; lots built from source.
    #

    # This code solve the failing with installation
    apt-get -y update
    apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

    Rscript -e 'BiocManager::install("scDblFinder", ask = FALSE)'
    Rscript -e 'if (!requireNamespace("scDblFinder", quietly = TRUE)) stop("scDblFinder not installed!")'

    Rscript -e 'BiocManager::install("miQC")'
    Rscript -e 'if (!requireNamespace("miQC", quietly = TRUE)) stop("miQC not installed!")'

    Rscript -e 'BiocManager::install("scater")'
    Rscript -e 'if (!requireNamespace("scater", quietly = TRUE)) stop("scater not installed!")'

    Rscript -e 'BiocManager::install("SingleCellExperiment")'
    Rscript -e 'if (!requireNamespace("SingleCellExperiment", quietly = TRUE)) stop("SingleCellExperiment not installed!")'

    Rscript -e 'BiocManager::install("SingleR")'
    Rscript -e 'if (!requireNamespace("SingleR", quietly = TRUE)) stop("SingleR not installed!")'

    #
    # Some github-based R modules; RcppPlanc needs previously installed cmake
    # and libhdf5-dev
    #

    Rscript -e 'devtools::install_github("igordot/scooter")'
    Rscript -e 'if (!requireNamespace("scooter", quietly = TRUE)) stop("scooter not installed!")'

    Rscript -e 'devtools::install_github("welch-lab/RcppPlanc")'
    Rscript -e 'if (!requireNamespace("RcppPlanc", quietly = TRUE)) stop("RcppPlanc not installed!")'

    # New R libraries for R shiny app
    Rscript -e 'devtools::install_github("SGDDNB/ShinyCell")'
    Rscript -e 'if (!requireNamespace("ShinyCell", quietly = TRUE)) stop("ShinyCell not installed!")'
    #
    # Removed "grid" from installs as triggered the warning message:
    # "package 'grid' is a base package, and should not be updated"
    # "grid" was then subsequently ignored by the installer anyway.
    #

    Rscript -e 'install.packages(c("clustree", "cowplot", "data.table"))'
    Rscript -e 'install.packages(c("flexmix", "flextable", "forcats"))'
    Rscript -e 'install.packages(c("fs", "future", "GGally"))'
    Rscript -e 'install.packages(c("ggh4x", "ggplot2", "ggpmisc"))'
    Rscript -e 'install.packages(c("ggrepel", "ggthemes"))'
    Rscript -e 'install.packages(c("harmony", "igraph", "irlba"))'
    Rscript -e 'install.packages(c("knitr", "optparse"))'
    Rscript -e 'install.packages(c("patchwork", "purrr", "RColorBrewer"))'
    Rscript -e 'install.packages(c("remotes", "reshape2", "rliger"))'
    Rscript -e 'install.packages(c("rlist", "R.utils", "SeuratObject"))'
    Rscript -e 'install.packages(c("shiny", "SoupX", "stringr"))'
    Rscript -e 'install.packages(c("tidytext", "tidyverse", "tinytex", "yaml"))'
    
    # New R libraries for R shiny app
    Rscript -e 'install.packages(c("shinyhelper", "DT", "ggdendro"))'
    
    # Prevent errors in dependencies for the following
    apt-get -y update

    #
    # Was Rscript -e 'remotes::install_version("Seurat", "4.4.0", repos = c("https://packagemanager.posit.co/cran/__linux__/jammy/latest"))'
    # but we specified the latest CRAN repo earlier so repo URL is redundant.
    # Default version of Seurat is higher than 4.4.0 and is incompatible with
    # input object format so install specific version. We also need to fix the
    # SeuratWrappers, as the existing version is incompatible with 4.4.0:
    #
    # https://github.com/satijalab/seurat-wrappers/issues/169
    #
    # We need to install the Seurat wrappers first, as otherwise they will
    # override the install of Seurat 4.4.0 with a later version of Seurat.
    #
    Rscript -e 'remotes::install_github("satijalab/seurat-wrappers@community-vignette")'
    Rscript -e 'remotes::install_version("Seurat", version = "4.4.0")'

    #Rscript -e 'install.packages("Signac")'
    Rscript -e 'devtools::install_github("stuart-lab/signac", ref = "develop")'

    # This code solve the failing with installation
    Rscript -e 'devtools::install_github("welch-lab/liger")'
    #RUN Rscript -e 'if (!requireNamespace("liger", quietly = TRUE)) stop("liger not installed!")'
    
    
    # Install CellRanger v8.0.1
    # You will need to download the desired version from here: https://www.10xgenomics.com/support/software/cell-ranger/downloads/previous-versions
    # Save on the same folder where Dockerfile is located
    # You should also replace the link with the one from the most recent download as the url expires after 1-2 days
    # Set environment variables
    ENV PATH=/opt/cellranger-8.0.1/bin:${PATH}
    ENV LD_LIBRARY_PATH=/opt/cellranger-8.0.1/lib
    curl -o cellranger-8.0.1.tar.gz "https://cf.10xgenomics.com/releases/cell-exp/cellranger-8.0.1.tar.gz?Expires=1735627055&Key-Pair-Id=APKAI7S6A5RYOXBWRPDA&Signature=Bn20s3ftEjQ6jD2HqiXz3GmLAf7U-GVnMyng-R1jN8fd9XyVu1B5kRVG5FLIor9LiXyVLRG0beBSx0QIf-0qthevVbwzl3ycNyfol33zRzcJqVPGhlyud6KSZFoqGeRf2FhEKmj7dIjCBWd0O0Sval63ABz~CjgCOIcPdHrldJcVNO1WFw4JXd0np~GyLcHbX4vuSoogNhnv52yYooELkpbnbeBuMekXojo2jIecbnb2yxBYxKDrmsNQ8ew8T2aMeWbLz9hphw8s0jvINITPriYdloqrpSgWAgfXzYEfiEyAATpE6hu6CU0I9dSOGn8lNkQP51PgZFxtA4Wte5qz3A__"
    tar -xvzf cellranger-8.0.1.tar.gz -C /opt


   # Optional: Clean up to reduce image size
   rm -rf /var/lib/apt/lists/* && apt-get clean

   #
   # Set the working directory (optional)
   # WORKDIR /home/user
   #

%environment
    export LC_ALL=C
    # Set virtual environment variables
    export VIRTUAL_ENV=/opt/container-venv
    export PATH=/opt/container-venv/bin:$PATH
    export R_LIBS_USER=/home/user/R/x86_64-pc-linux-gnu-library/4.4

%runscript
    # Adjust as needed!
    . /opt/container-venv/bin/activate
	exec "$@"

